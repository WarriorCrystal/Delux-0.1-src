//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "1.12 stable mappings"!

// 
// Decompiled by Procyon v0.5.36
// 

package me.travis.wurstplus.wurstplustwo.hacks.exploit;

import java.util.Iterator;
import java.util.function.Predicate;
import net.minecraft.entity.item.EntityEnderCrystal;
import net.minecraft.entity.Entity;
import me.travis.wurstplus.wurstplustwo.hacks.Wrapper;
import net.minecraft.init.SoundEvents;
import net.minecraft.util.SoundCategory;
import net.minecraft.network.play.server.SPacketSoundEffect;
import me.travis.wurstplus.wurstplustwo.hacks.WurstplusCategory;
import me.zero.alpine.fork.listener.EventHandler;
import me.travis.wurstplus.wurstplustwo.event.events.WurstplusEventPacket;
import me.zero.alpine.fork.listener.Listener;
import me.travis.wurstplus.wurstplustwo.hacks.WurstplusHack;

public class WurstplusAntiDesync extends WurstplusHack
{
    @EventHandler
    private final Listener<WurstplusEventPacket.ReceivePacket> receive_listener;
    
    public WurstplusAntiDesync() {
        super(WurstplusCategory.WURSTPLUS_EXPLOIT);
        SPacketSoundEffect packet;
        Iterator var3;
        Entity e;
        this.receive_listener = new Listener<WurstplusEventPacket.ReceivePacket>(event -> {
            if (event.get_packet() instanceof SPacketSoundEffect) {
                packet = (SPacketSoundEffect)event.get_packet();
                if (packet.getCategory() == SoundCategory.BLOCKS && packet.getSound() == SoundEvents.ENTITY_GENERIC_EXPLODE) {
                    try {
                        var3 = Wrapper.getWorld().loadedEntityList.iterator();
                        while (var3.hasNext()) {
                            e = var3.next();
                            if (e instanceof EntityEnderCrystal && e.getDistance(packet.getX(), packet.getY(), packet.getZ()) <= 6.0) {
                                e.setDead();
                            }
                        }
                    }
                    catch (Exception var4) {
                        var4.printStackTrace();
                    }
                }
            }
            return;
        }, (Predicate<WurstplusEventPacket.ReceivePacket>[])new Predicate[0]);
        this.name = "Anti Desync";
        this.tag = "AntiDesync";
        this.description = "no desync";
    }
}
