//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "1.12 stable mappings"!

// 
// Decompiled by Procyon v0.5.36
// 

package me.travis.wurstplus.wurstplustwo.hacks.exploit;

import net.minecraft.entity.Entity;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.RayTraceResult;
import java.util.function.Consumer;
import net.minecraft.entity.EntityLivingBase;
import me.travis.wurstplus.wurstplustwo.hacks.WurstplusCategory;
import me.travis.wurstplus.wurstplustwo.hacks.WurstplusHack;

public class WurstplusEntityMine extends WurstplusHack
{
    private boolean focus;
    
    public WurstplusEntityMine() {
        super(WurstplusCategory.WURSTPLUS_EXPLOIT);
        this.focus = false;
        this.name = "Entity Mine";
        this.tag = "EntityMine";
        this.description = "mine through stuff";
    }
    
    @Override
    public void update() {
        WurstplusEntityMine.mc.world.loadedEntityList.stream().filter(entity -> entity instanceof EntityLivingBase).filter(entity -> WurstplusEntityMine.mc.player == entity).map(entity -> entity).filter(entity -> !entity.isDead).forEach(this::process);
        final RayTraceResult normal_result = WurstplusEntityMine.mc.objectMouseOver;
        if (normal_result != null) {
            this.focus = (normal_result.typeOfHit == RayTraceResult.Type.ENTITY);
        }
    }
    
    private void process(final EntityLivingBase event) {
        final RayTraceResult bypass_entity_result = event.rayTrace(6.0, WurstplusEntityMine.mc.getRenderPartialTicks());
        if (bypass_entity_result != null && this.focus && bypass_entity_result.typeOfHit == RayTraceResult.Type.BLOCK) {
            final BlockPos block_pos = bypass_entity_result.getBlockPos();
            if (WurstplusEntityMine.mc.gameSettings.keyBindAttack.isKeyDown()) {
                WurstplusEntityMine.mc.playerController.onPlayerDamageBlock(block_pos, EnumFacing.UP);
            }
        }
    }
}
